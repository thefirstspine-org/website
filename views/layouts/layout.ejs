<!DOCTYPE html>
<html>
  <head>
    <title><%= typeof(title) === 'string' ? `${__(title)} - The First Spine` : `The First Spine - ${__("template.title")}` %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <%/* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <%/* <meta name="robots" content="noindex"> */%>

    <!-- Page tags -->
    <% if(typeof(tags) !== 'undefined') { %>
      <% tags.forEach(function(tag) { %>
        <meta <%= tag['type'] %>="<%= tag['name'] %>" content="<%= tag['value'] %>" />
      <% }) %>
    <% } %>

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
    <% if(typeof(solidPancakeUrl) !== 'undefined') { %>
      <script src="<%= solidPancakeUrl %>/sirup.js"></script>
      <script>sirup.persistantSession('tfs-website', navigator.platform).then(() => { sirup.event('viewPage', 'navigation', document.location.href); })</script>
    <% } %>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
  </head>
  <body>

    <div id="app">
      <%- body %>
    </div>

    <%- include('../components/card.ejs'); %>
    <%- include('../components/card-autoload.ejs'); %>
    <%- include('../components/service-checker.ejs'); %>
    <%- include('../components/facebook-login.ejs'); %>
    <%- include('../components/codeinput.ejs'); %>
    <%- include('../components/navigation.ejs'); %>
    <%- include('../components/date.ejs'); %>
    <%- include('../components/gmap.ejs'); %>
    <%- include('../components/countdown.ejs'); %>
    <%- include('../components/room.ejs'); %>
    <%- include('../components/matchcode.ejs'); %>
    <%- include('../components/screenshots.ejs'); %>
    <%- include('../components/donation-button.ejs'); %>

    <script>
      var app = new Vue({
        el: '#app'
      })
    </script>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/dependencies/sails.io.js"></script>
    <!--SCRIPTS END-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/js/all.min.js"></script>
    <script>const _0x41b0=['%c\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20TTTTTTTTTTTTTTTTTTTTTTT\x20\x20\x20\x20\x20FFFFFFFFFFFFFFFFFFFFFF\x20\x20\x20\x20\x20\x20\x20\x20SSSSSSSSSSSSSSS\x20\x20\x20\x0a\x20\x20T:::::::::::::::::::::T\x20\x20\x20\x20\x20F::::::::::::::::::::F\x20\x20\x20\x20\x20\x20SS:::::::::::::::S\x20\x20\x0a\x20\x20T:::::::::::::::::::::T\x20\x20\x20\x20\x20F::::::::::::::::::::F\x20\x20\x20\x20\x20S:::::SSSSSS::::::S\x20\x20\x0a\x20\x20T:::::TT:::::::TT:::::T\x20\x20\x20\x20\x20FF::::::FFFFFFFFF::::F\x20\x20\x20\x20\x20S:::::S\x20\x20\x20\x20\x20SSSSSSS\x20\x20\x0a\x20\x20TTTTTT\x20\x20T:::::T\x20\x20TTTTTT\x20\x20\x20\x20\x20\x20\x20F:::::F\x20\x20\x20\x20\x20\x20\x20FFFFFF\x20\x20\x20\x20\x20S:::::S\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F:::::F\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20S:::::S\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F::::::FFFFFFFFFF\x20\x20\x20\x20\x20\x20\x20\x20\x20S::::SSSS\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F:::::::::::::::F\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SS::::::SSSSS\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F:::::::::::::::F\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SSS::::::::SS\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F::::::FFFFFFFFFF\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SSSSSS::::S\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F:::::F\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20S:::::S\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20T:::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F:::::F\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20S:::::S\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20TT:::::::TT\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20FF:::::::FF\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SSSSSSS\x20\x20\x20\x20\x20S:::::S\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20T:::::::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F::::::::FF\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20S::::::SSSSSS:::::S\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20T:::::::::T\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20F::::::::FF\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20S:::::::::::::::SS\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20TTTTTTTTTTT\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20FFFFFFFFFFF\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SSSSSSSSSSSSSSS\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a','color:\x20#333333;','%c\x0aHey\x20there!\x20Interested\x20in\x20the\x20code\x20behind\x20The\x20First\x20Spine?\x20Well,\x20you\x27re\x20in\x20luck\x20-\x20we\x27re\x20open\x20source!\x0aCome\x20say\x20hi,\x20tell\x20us\x20what\x20you\x27re\x20debugging,\x20or\x20even\x20lend\x20a\x20hand\x20in\x20our\x20repo:\x20https://thefirstspine.github.com\x0a','log','color:\x20#fcba03;\x20background:\x20#000'];(function(_0x365cdb,_0x41b048){const _0x2b40fd=function(_0x5ca6fe){while(--_0x5ca6fe){_0x365cdb['push'](_0x365cdb['shift']());}};_0x2b40fd(++_0x41b048);}(_0x41b0,0x148));const _0x2b40=function(_0x365cdb,_0x41b048){_0x365cdb=_0x365cdb-0x0;const _0x2b40fd=_0x41b0[_0x365cdb];return _0x2b40fd;};console['log'](_0x2b40('0x2'),_0x2b40('0x1'));console[_0x2b40('0x0')](_0x2b40('0x4'),_0x2b40('0x3'));</script>
    <script>function loadScript(a){var b=document.getElementsByTagName("head")[0],c=document.createElement("script");c.type="text/javascript",c.src="https://tracker.metricool.com/resources/be.js",c.onreadystatechange=a,c.onload=a,b.appendChild(c)}loadScript(function(){beTracker.t({hash:"1047075895681e54710c763d4b6af90f"})});</script>
  </body>
</html>
